apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-vector-drawable:28.0.0'
    implementation 'android.arch.navigation:navigation-fragment:1.0.0'
    implementation 'android.arch.navigation:navigation-ui:1.0.0'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:28.0.0'
    implementation files('libs/vpbluetooth_1.0.3.jar')
    implementation files('libs/vpprotocol_2.1.21.15.jar')
    implementation 'com.android.support:multidex:1.0.3'
    //litePal数据库
    implementation 'org.litepal.android:java:3.0.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation files('libs/commons-lang-2.5.jar')
    implementation 'com.contrarywind:Android-PickerView:4.1.6'

    //glide库
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    implementation(name: 'MPChartLib', ext: 'aar')


    /**=====================在最后边添加==========================================================*/
    apply plugin: 'com.github.dcendents.android-maven'
    apply plugin: 'com.jfrog.bintray'
    version = "1.0.0"    //版本号，以后每次更新library都得更改
    def siteUrl = 'https://github.com/******'    //Homepage URL of the library
    def gitUrl = 'https://github.com/******.git'    //Git repository url
    def issueUrl = 'https://github.com/******/issues'    //issue url of the library
    def linksUrl = 'https://github.com/******/wiki'//links url of the

/*=====(路径可以是假的)======*/
    group = "com.bozlun.android"    //组织
    install {
        repositories.mavenInstaller {
            // This generates POM.xml with proper parameters
            pom {
                project {
                    packaging 'aar'
                    // Add your description here
                    name '介绍'
                    url siteUrl
                    // Set your license
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id '******' //your user ID
                            name 'sunjianhua' //your name
                            email 'sunjianhuadeve@gmail.com' //your email
                        }
                    }
                    scm {
                        connection gitUrl
                        developerConnection gitUrl
                        url siteUrl
                    }
                }
            }
        }
    }
//生成源文件
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }
//生成文档
    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        options.encoding "UTF-8"
        options.charSet 'UTF-8'
        options.author true
        options.version true
        options.links linksUrl
        failOnError false
    }
//文档打包成jar
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
//拷贝javadoc文件
    task copyDoc(type: Copy) {
        from "${buildDir}/docs/"
        into "docs"
    }

//上传到jcenter所需要的源码文件
    artifacts {
        archives javadocJar
        archives sourcesJar
    }
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    bintray {
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.apikey")
        configurations = ['archives']
        pkg {
            repo = "Android-ProjectTools"    //发布到Bintray的哪个仓库
            name = "BraceB31"    //发布到Bintray上的名字
            desc = "The B31 device simple demo"    //项目描述
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            issueTrackerUrl = issueUrl
            licenses = ["Apache-2.0"]
            labels = ['android']    //标签
            publish = true
            publicDownloadNumbers = true
        }
    }

}
